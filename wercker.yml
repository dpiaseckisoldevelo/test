# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: pkubicki/atom-rc-base
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - script:
        name: Init dummy build
        code: |
          echo "Build action "
deploy:
# This will be used, if the deploy target "SD_dev" is used.
  SD_dev:
    - mktemp:
        envvar: PRIVATEKEY_PATH
    - create-file:
        name: write key
        filename: $PRIVATEKEY_PATH
        content: $WERCKER_SSH_PRIVATE
        overwrite: true
        hide-from-log: true
    - script:
        name: transfer application to the server
        code: |
          ssh -p 22 -i $PRIVATEKEY_PATH -l ubuntu -o UserKnownHostsFile=no -o StrictHostKeyChecking=no $HOSTURL "cd $DEPLOYPATH;ls -al;git pull origin $WERCKER_GIT_BRANCH"
  SD_prod:
    - mktemp:
        envvar: PRIVATEKEY_PATH
    - create-file:
        name: write key
        filename: $PRIVATEKEY_PATH
        content: $WERCKER_SSH_PRIVATE
        overwrite: true
        hide-from-log: true
    - script:
        name: transfer application to the server
        code: |
          ssh -p 22 -i $PRIVATEKEY_PATH -l ubuntu -o UserKnownHostsFile=no -o StrictHostKeyChecking=no $HOSTURL "cd $DEPLOYPATH;ls -al;git pull origin $WERCKER_GIT_BRANCH"
# This will be used, if the deploy target "It-syndicates-prod" is used.
#  It-syndicates-prod:
#    - mktemp:
#        envvar: PRIVATEKEY_PATH
#    - create-file:
#        name: write key
#        filename: $PRIVATEKEY_PATH
#        content: $WERCKER_SSH_PRIVATE
#        overwrite: true
#        hide-from-log: true
#    - script:
#        name: transfer application to It-syndicates-prod
#        code: |
#          ssh -p 6666 -i $PRIVATEKEY_PATH -l developer -o UserKnownHostsFile=no -o StrictHostKeyChecking=no $HOSTURL "ls -al;cd /srv/httpd/$DEPLOYPATH/drupal;sudo git reset --hard; sudo git clean -f; git pull origin $WERCKER_GIT_BRANCH"
#    - script:
#        name: Let's sassify
#        code: |
#          bash ./sasscomp.sh
 # after-steps:
 #   - wantedly/pretty-slack-notify:
 #       name: Slack notify
 #       webhook_url: $SLACK_WEBHOOK_URL
 #       channel: news_from_wercker
 #       username: Wercker